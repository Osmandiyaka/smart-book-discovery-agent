version: '3.8'

services:
  # Redis for job queue and data persistence
  redis:
    image: redis:7-alpine
    container_name: book-discovery-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    networks:
      - book-discovery-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Main application with Redis queue
  book-discovery-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: book-discovery-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - AI_PROVIDER=ollama
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MAX_BROWSERS=2
      - BROWSER_IDLE_TIME=300000
      - MAX_SCRAPE_PAGES=5
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - book-discovery-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Queue monitoring dashboard (optional)
  bull-board:
    image: node:18-alpine
    container_name: book-discovery-monitor
    ports:
      - "3001:3000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./monitoring:/app
    working_dir: /app
    command: npm start
    depends_on:
      - redis
    networks:
      - book-discovery-network
    profiles:
      - monitoring

  # Development service with Ollama
  book-discovery-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: book-discovery-dev
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
      - AI_PROVIDER=ollama
      - AI_BASE_URL=http://ollama:11434
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MAX_BROWSERS=1
      - BROWSER_IDLE_TIME=180000
      - MAX_SCRAPE_PAGES=3
    env_file:
      - .env.development
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
      ollama:
        condition: service_healthy
    networks:
      - book-discovery-network
    profiles:
      - development

  # Ollama service for local AI
  ollama:
    image: ollama/ollama:latest
    container_name: book-discovery-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    restart: unless-stopped
    networks:
      - book-discovery-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    profiles:
      - development
      - ollama

  # Nginx load balancer for multiple app instances
  nginx:
    image: nginx:alpine
    container_name: book-discovery-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - book-discovery-app
    networks:
      - book-discovery-network
    profiles:
      - production
      - load-balancer

volumes:
  redis_data:
    driver: local
  ollama_data:
    driver: local

networks:
  book-discovery-network:
    driver: bridge